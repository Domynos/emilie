# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
play.crypto.secret = "changeme"

# The application languages
# ~~~~~
play.i18n.langs = [ "en" ]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# play.http.router = my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.username=sa
# db.default.password=""

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# play.evolutions.enabled=false

# You can disable evolutions for a specific datasource if necessary
# play.evolutions.db.default.enabled=false



play {
  akka {
    event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]
    loglevel = DEBUG
    stdout-loglevel = "off"
    actor {
      default-dispatcher = {
        executor = "thread-pool-executor"

        fork-join-executor {
          parallelism-factor = 1.0
          parallelism-max = 1.0
        }

        thread-pool-executor {
	  keep-alive-time = 60s
          core-pool-size-min = 1
          core-pool-size-factor = 1.0
          core-pool-size-max = 1
          max-pool-size-min = 1
          max-pool-size-factor  = 1.0
          max-pool-size-max = 1
          task-queue-size = -1
          task-queue-type = "linked"
          allow-core-timeout = on
       }

      }

    }



  }

  jvm-exit-on-fatal-error = on
  internal-threadpool-size =  1


  server{
    http {
      port = 7001
    }
  }

}



netty.tcp {
   server-socket-worker-pool {
     pool-size-min = 1.0
     pool-size-factor = 1.0
     pool-size-max = 1.0
   }

   client-socket-worker-pool {
     pool-size-min = 1
     pool-size-factor = 1.0
     pool-size-max = 1
   }

}
